
# Start counting pane and window number at 1
set -g base-index 1
set -g pane-base-index 1
# When we add/remove windows, renumber them in sequential order.
set-window-option -g pane-base-index 1
set -g renumber-windows on

# increase scrollback lines
set -g history-limit 10000

# improve colors
set -g default-terminal 'screen-256color'

# Enable mouse mode
set -g mouse on
# Enable mouse control (clickable windows, panes, resizable panes)
# set -g mouse-select-window on
# set -g mouse-select-pane on
# set -g mouse-resize-pane on

#********************* Bindings *********************#
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# bind r source-file ~/.tmux.conf |; display "Sourced ~/.tmux.conf"
# bind r source-file ~/.tmux.conf
bind r source-file ${HOME}/.tmux.conf \; display-message "tmux.conf reloaded"

# Splitting terminals using | and -
unbind '"'
unbind %
# bind _ split-window -v
# bind | split-window -h
# # Split panes using | and -
bind | split-window -h -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D
# Vim like binding for the same
bind -n M-l select-pane -L
bind -n M-h select-pane -R
bind -n M-k select-pane -U
bind -n M-j select-pane -D

# Shift arrow (Alt+Ctrl+Direction) to switch windows
bind -n M-C-Left  previous-window
bind -n M-C-Right next-window
bind -n M-C-h  previous-window
bind -n M-C-l next-window

# New window at current path: c
unbind c
bind c new-window -c "#{pane_current_path}"

# New window: n
unbind n
bind n new-window

# Detach: d
unbind d
bind d detach

# Kill window: k
unbind k
bind k confirm-before "kill-window"

# Redisplay: l
# unbind l
# bind l refresh-client

# Clears Display
bind u send-keys C-l \; run-shell "sleep .1s" \; clear-history

#********************* Themes *********************#
# Clean Theme for TMUX
set -g @plugin "janoamaral/tokyo-night-tmux"

# Keep the themes at top of other plugins as it messes with functionalities of plugins epecially
# resurrect and continuum
#********************* Plugins *********************#

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'thuanOwa/tmux-fzf-session-switch'


set -g @plugin 'christoomey/vim-tmux-navigator'

set -g @plugin 'tmux-plugins/tmux-pain-control'

# prefix + ctrl-f - simple file search
# prefix + ctrl-g - jumping over git status files (best used after git status command)
# prefix + alt-h - jumping over SHA-1/SHA-256 hashes (best used after git log command)
# prefix + ctrl-u - url search (http, ftp and git urls)
# prefix + ctrl-d - number search (mnemonic d, as digit)
# prefix + alt-i - ip address search
set -g @plugin 'tmux-plugins/tmux-copycat'
# highlight file.pdf and press o - file will open in the default PDF viewer.
# highlight file.doc and press o - file will open in system default .doc file viewer.
# highlight http://example.com and press o - link will be opened in the default browser.
# highlight file.txt and press Ctrl-o - file will open in $EDITOR.
# highlight TypeError: 'undefined' is not a function and press Shift-s - the text snipped will be searched directly inside google by default
set -g @plugin 'tmux-plugins/tmux-open' # Helps in opening files from output.
set -g @plugin 'laktak/extrakto' # Helps in copying text to command or open via search

# TMUX resurrect and continuum setttings.
set -g @resurrect-dir '~/.tmux/resurrect' # Directory for resurrect files
set -g @continuum-save-interval '15' # Sets the automatic saving interval for tmux to 15 minutes
# set -g @continuum-save-interval '0' # Stops the automatic saving
# ref:https://github.com/tmux-plugins/tmux-continuum/blob/master/docs/faq.md
set -g @continuum-restore 'on'

# plugin for restoring the closed session for tmux
set -g @plugin 'tmux-plugins/tmux-resurrect'
# For automatically saving the tmux sessions.
set -g @plugin 'tmux-plugins/tmux-continuum'

# Local config -- Can be used for adding different other user specific options.
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
